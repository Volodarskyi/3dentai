# Ingress Definition
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hackaton-client
  namespace: hackaton-argo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    external-dns.alpha.kubernetes.io/hostname: "3dentai.paxel.ca."
    external-dns.alpha.kubernetes.io/target: "router.paxel.ca."
    
spec:
  ingressClassName: nginx
  rules:
    - host: 3dentai.paxel.ca
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hackaton-client
                port:
                  number: 80
  tls:
    - hosts:
        - 3dentai.paxel.ca
      secretName: 3dentai.paxel.ca-tls

---

# Service Definition for Hackaton Server
apiVersion: v1
kind: Service
metadata:
  name: hackaton-client
  namespace: hackaton-argo
  labels:
    name: hackaton-client
spec:
  selector:
    name: hackaton-client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---

# Deployment Definition for Hackaton Server with Longhorn PVC
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hackaton-client
  namespace: hackaton-argo
  labels:
    name: hackaton-client
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hackaton-client
  template:
    metadata:
      labels:
        name: hackaton-client
    spec:
      imagePullSecrets:
        - name: dockerhubaccess
      containers:
        - name: hackaton-client
          image: oleksiipasichnyk/confl:hackaton-argo-client-cbc6a0b-20250319
          imagePullPolicy: Always
          ports:
            - name: http-server
              containerPort: 3000
          resources:
            requests:
              memory: "4Gi"
              cpu: "2"
            limits:
              memory: "6Gi"
              cpu: "4"
